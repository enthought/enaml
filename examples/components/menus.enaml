#------------------------------------------------------------------------------
#  Copyright (c) 2011, Enthought, Inc.
#  All rights reserved.
#------------------------------------------------------------------------------
""" Menu Example

This example shows how to use the MenuBar and popup menu facilities.

"""
import os


def get_recent_files(filenames):
    """ A simple function that returns a list of PrintActions that
    represent a list of recent files. This would normally be computed
    based on some model information.

    """
    return [PrintAction(text=fn) for fn in filenames]


def setup_icon(icon, normal_image, off_image):
    """ Add images to the provided icon object.
    
    """
    normal_image = normal_image.scale((16, 16))
    off_image = off_image.scale((16, 16))
    icon.add_image(off_image, mode='normal', state='off')
    icon.add_image(normal_image, mode='normal', state='on')
    return icon


def make_path(pth):
    """ Make a valid path from the given path.

    """
    return os.path.join(os.path.dirname(__file__), pth)


enamldef PrintAction(Action):
    """ A very simple action which prints out its text hierarchy
    when triggered.

    """
    triggered :: 
        parts = [text]
        # FIXME - this is a bit fragile.
        while parent is not None:
            if parent.parent is not None and hasattr(parent, 'title'):
                parts.append(parent.title)
            parent = parent.parent
        print ' - '.join(reversed(parts))


enamldef ViewMenu(Menu):
    title = 'View'
    PrintAction:
        text = 'Refresh Now'
    Action:
        separator = True
    PrintAction:
        text = 'Selection Columns...'


enamldef MainMenu(MenuBar):
    attr show_view_menu: bool = False
    attr recent_files: list = ['spam.txt', 'ham.pdf', 'eggs.doc']
    attr my_icon: Icon = setup_icon(
        Icon(), 
        Image.from_file(make_path('question.png')),
        Image.from_file(make_path('image_not_found.png')),
    )
    event popup_file_menu :: file_menu.popup()
    Menu:
        id: file_menu
        title = 'File'
        PrintAction:
            text = 'New File'
        PrintAction:
            text = 'Open File...'
        PrintAction:
            text = 'Open Folder...'
        Menu:
            title = 'Open Recent'
            Include:
                components << get_recent_files(recent_files)
            Action:
                separator = True
            PrintAction:
                text = 'Clear Items'
        PrintAction:
            text = 'Close'
    Menu:
        title = 'Edit'
        PrintAction:
            text = 'Cut'
        PrintAction:
            text = 'Copy'
        PrintAction:
            text = 'Paste'
    Include:
        components << ViewMenu() if show_view_menu else []
    Menu:
        title = 'Window'
        PrintAction:
            text = 'Minimize'
        PrintAction:
            text = 'Zoom'
    Menu:
        title = 'Icons'
        PrintAction:
            text = 'Normal'
            icon = my_icon
        PrintAction:
            text = 'Disabled'
            enabled = False
            icon = my_icon
        PrintAction:
            text = 'Checkable'
            checkable = True
            icon = my_icon


enamldef Main(MainWindow):
    menu_bar = MainMenu()
    Container:
        Html:
            source = '<center><h1>Hello Enaml Menus!</h1></center>'
        CheckBox:
            text = 'Show View Menu'
            checked >> menu_bar.show_view_menu
        PushButton:
            icon = Icon.from_file(make_path('question.png'))
            text = 'Popup File Menu'
            clicked :: menu_bar.popup_file_menu()
        PushButton:
            text = 'Change Recent Files'
            clicked :: menu_bar.recent_files = ['one.txt', 'two.pdf', 'three.doc']


from enaml.item_models.standard_models import ListModel, TableModel
from enaml.styling.brush import Brush
from enaml.styling.color import Color


:: python ::

# A single row of data with 100k elements
row = range(1000000)

# A (1000, 100) table of data
table = [[i + (100 * j) for i in xrange(100)] for j in xrange(1000)]

# A setter function to update a cell in the row of data.
def row_setter(src, idx, val):
    try:
        src[idx] = int(val)
    except ValueError:
        return False
    return True

# A setter function to update a cell in the table of data
def table_setter(src, row, col, val):
    try:
        src[row][col] = int(val)
    except ValueError:
        return False
    return True


# A simple list model to display a single row of data
list_model = ListModel(row, data_setter=row_setter)


# A simple TableModel subclass that alternates the row colors of
# the table as well as selectively colors certain cells based on 
# the data value for that cell.
class ColoredTable(TableModel):

    red_brush = Brush(Color.from_string('indianred'))
    shade_brush = Brush(Color(237, 237, 237))

    def background(self, index):
        brush = None
        row = index.row
        col = index.column

        if row % 2 == 0:
            brush = self.shade_brush
            
        data = self.data_source[row][col]
        if data % 17 == 0:
            brush = self.red_brush

        return brush

table_model = ColoredTable(table, data_setter=table_setter)

:: end ::


# ListModel and TableModel are both subclasses of AbstractItemModel
# which means they can both be passed to TableView and work just fine.
# And once ListView and TreeView are implemented, will work just fine
# there as well.

defn MainWindow:
    Window:
        constraints = [
            vertical(top, tv1, bottom),
            vertical(top, tv2, bottom),
            horizontal(left, tv1, tv2, right),
        ]
        TableView -> tv1:
            hug_width = 'strong'
            item_model = list_model
        TableView -> tv2:
            item_model = table_model

